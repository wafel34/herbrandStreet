!function e(t,n,i){function s(o,r){if(!n[o]){if(!t[o]){var l="function"==typeof require&&require;if(!r&&l)return l(o,!0);if(a)return a(o,!0);throw new Error("Cannot find module '"+o+"'")}var c=n[o]={exports:{}};t[o][0].call(c.exports,function(e){var n=t[o][1][e];return s(n||e)},c,c.exports,e,t,n,i)}return n[o].exports}for(var a="function"==typeof require&&require,o=0;o<i.length;o++)s(i[o]);return s}({1:[function(e,t,n){(function(e){!function(e,i){"function"==typeof define&&define.amd?define([],function(){return i(e)}):"object"==typeof n?t.exports=i(e):e.SmoothScroll=i(e)}(void 0!==e?e:"undefined"!=typeof window?window:this,function(e){"use strict";var t="querySelector"in document&&"addEventListener"in e&&"requestAnimationFrame"in e&&"closest"in e.Element.prototype,n={ignore:"[data-scroll-ignore]",header:null,speed:500,offset:0,easing:"easeInOutCubic",customEasing:null,before:function(){},after:function(){}},i=function(){for(var e={},t=0,n=arguments.length;t<n;t++)!function(t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])}(arguments[t]);return e},s=function(t){return parseInt(e.getComputedStyle(t).height,10)},a=function(e){"#"===e.charAt(0)&&(e=e.substr(1));for(var t,n=String(e),i=n.length,s=-1,a="",o=n.charCodeAt(0);++s<i;){if(0===(t=n.charCodeAt(s)))throw new InvalidCharacterError("Invalid character: the input contains U+0000.");a+=t>=1&&t<=31||127==t||0===s&&t>=48&&t<=57||1===s&&t>=48&&t<=57&&45===o?"\\"+t.toString(16)+" ":t>=128||45===t||95===t||t>=48&&t<=57||t>=65&&t<=90||t>=97&&t<=122?n.charAt(s):"\\"+n.charAt(s)}return"#"+a},o=function(e,t){var n;return"easeInQuad"===e.easing&&(n=t*t),"easeOutQuad"===e.easing&&(n=t*(2-t)),"easeInOutQuad"===e.easing&&(n=t<.5?2*t*t:(4-2*t)*t-1),"easeInCubic"===e.easing&&(n=t*t*t),"easeOutCubic"===e.easing&&(n=--t*t*t+1),"easeInOutCubic"===e.easing&&(n=t<.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1),"easeInQuart"===e.easing&&(n=t*t*t*t),"easeOutQuart"===e.easing&&(n=1- --t*t*t*t),"easeInOutQuart"===e.easing&&(n=t<.5?8*t*t*t*t:1-8*--t*t*t*t),"easeInQuint"===e.easing&&(n=t*t*t*t*t),"easeOutQuint"===e.easing&&(n=1+--t*t*t*t*t),"easeInOutQuint"===e.easing&&(n=t<.5?16*t*t*t*t*t:1+16*--t*t*t*t*t),e.customEasing&&(n=e.customEasing(t)),n||t},r=function(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)},l=function(e,t,n){var i=0;if(e.offsetParent)do{i+=e.offsetTop,e=e.offsetParent}while(e);return i=Math.max(i-t-n,0)},c=function(e){return e?s(e)+e.offsetTop:0},d=function(t,n,i){i||(t.focus(),document.activeElement.id!==t.id&&(t.setAttribute("tabindex","-1"),t.focus(),t.style.outline="none"),e.scrollTo(0,n))},u=function(t){return!!("matchMedia"in e&&e.matchMedia("(prefers-reduced-motion)").matches)};return function(s,m){var h,p,f,g,v,y,b,E={};E.cancelScroll=function(){cancelAnimationFrame(b)},E.animateScroll=function(t,s,a){var u=i(h||n,a||{}),m="[object Number]"===Object.prototype.toString.call(t),p=m||!t.tagName?null:t;if(m||p){var f=e.pageYOffset;u.header&&!g&&(g=document.querySelector(u.header)),v||(v=c(g));var y,b,I,L=m?t:l(p,v,parseInt("function"==typeof u.offset?u.offset():u.offset,10)),_=L-f,w=r(),k=0,S=function(n,i){var a=e.pageYOffset;if(n==i||a==i||(f<i&&e.innerHeight+a)>=w)return E.cancelScroll(),d(t,i,m),u.after(t,s),y=null,!0},A=function(t){y||(y=t),b=(k+=t-y)/parseInt(u.speed,10),I=f+_*o(u,b=b>1?1:b),e.scrollTo(0,Math.floor(I)),S(I,L)||(e.requestAnimationFrame(A),y=t)};0===e.pageYOffset&&e.scrollTo(0,0),u.before(t,s),E.cancelScroll(),e.requestAnimationFrame(A)}};var I=function(e){p&&(p.id=p.getAttribute("data-scroll-id"),E.animateScroll(p,f),p=null,f=null)},L=function(t){if(!u()&&0===t.button&&!t.metaKey&&!t.ctrlKey&&(f=t.target.closest(s))&&"a"===f.tagName.toLowerCase()&&!t.target.closest(h.ignore)&&f.hostname===e.location.hostname&&f.pathname===e.location.pathname&&/#/.test(f.href)){var n;try{n=a(decodeURIComponent(f.hash))}catch(e){n=a(f.hash)}if("#"===n){t.preventDefault();var i=(p=document.body).id?p.id:"smooth-scroll-top";return p.setAttribute("data-scroll-id",i),p.id="",void(e.location.hash.substring(1)===i?I():e.location.hash=i)}(p=document.querySelector(n))&&(p.setAttribute("data-scroll-id",p.id),p.id="",f.hash===e.location.hash&&(t.preventDefault(),I()))}},_=function(e){y||(y=setTimeout(function(){y=null,v=c(g)},66))};return E.destroy=function(){h&&(document.removeEventListener("click",L,!1),e.removeEventListener("resize",_,!1),E.cancelScroll(),h=null,p=null,f=null,g=null,v=null,y=null,b=null)},E.init=function(s){t&&(E.destroy(),h=i(n,s||{}),g=h.header?document.querySelector(h.header):null,v=c(g),document.addEventListener("click",L,!1),e.addEventListener("hashchange",I,!1),g&&e.addEventListener("resize",_,!1))},E.init(m),E}})}).call(this,"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(e,t,n){window.onload=function(){s.init(),o.initialize({type:document.getElementById("input-type").value,sort:document.getElementById("input-sort").value})};var i={name:document.getElementById("personName"),email:document.getElementById("personEmail"),message:document.getElementById("personMessage"),submit:document.getElementById("form__submit-button"),button:document.getElementById("close-confirmation-button"),infoDiv:document.getElementById("form-submitted")};i.validate=function(e){e.preventDefault();var t={name:this.name.value,email:this.email.value,message:this.message.value};this.send(t)},i.showConfirmation=function(){this.name.value=null,this.email.value=null,this.message.value=null,this.infoDiv.classList.remove("form-submitted--hidden"),this.infoDiv.classList.add("form-submitted--visible"),this.button.addEventListener("blur",function(e){13!==e.keyCode&&this.button.focus()}.bind(this),!1),this.button.addEventListener("click",function(){this.infoDiv.classList.remove("form-submitted--visible"),this.infoDiv.classList.add("form-submitted--hidden")}.bind(this),!1),setTimeout(function(){this.button.focus()}.bind(this),300)},i.send=function(e){var t=JSON.stringify(e),n=new XMLHttpRequest;n.onreadystatechange=function(){4===n.readyState&&200===n.status?this.showConfirmation():4===n.readyState&&200!==n.status&&alert("Ooops, there was and error: "+n.responseText+"\nPlease try again, or email us manually at herbrandapartment@gmail.com\nThank you.")}.bind(this),n.open("POST","/"),n.setRequestHeader("Content-type","application/json;charset=UTF-8"),n.send(t)};var s={setInputType:function(e){this.type=e},getInputType:function(){return this.type},setInputSort:function(e){this.sort=e},getInputSort:function(){return this.sort}};s.init=function(){var e=document.getElementById("input-type"),t=document.getElementById("input-sort"),n=document.querySelectorAll(".gallery__link"),s=document.querySelector(".menu-list"),o=s.children[s.children.length-1],r=document.getElementById("contact-form");arr=Array.prototype.slice.call(n),this.setInputType(e.value),this.setInputSort(t.value),e.addEventListener("change",this.clickListener.bind(this),!1),t.addEventListener("change",this.clickListener.bind(this),!1),arr.map(function(e){e.addEventListener("click",a.init.bind(a),!1)}),o.addEventListener("keydown",NAVIGATION.hideFocus.bind(NAVIGATION),!1),s.addEventListener("click",NAVIGATION.hideClick.bind(NAVIGATION),!1),document.body.addEventListener("click",NAVIGATION.hideClickOut.bind(NAVIGATION),!1),r.addEventListener("submit",i.validate.bind(i),!1)},s.clickListener=function(e){var t=e.src||e.target,n=t.value,i={};"input-type"===t.id&&this.setInputType(n),"input-sort"===t.id&&this.setInputSort(n),i={type:this.getInputType(),sort:this.getInputSort()},o.initialize(i)};var a={collection:document.querySelectorAll(".gallery__item"),div:document.getElementById("full-screen-gallery"),closeBtn:document.createElement("button"),checkIfFiredAlready:!1,windowWidth:window.innerWidth};a.init=function(e){e.preventDefault();var t={},n={};content="",e.srcElement?(t="IMG"!==e.srcElement.nodeName?e.srcElement.firstChild:e.srcElement,n="IMG"!==e.srcElement.nodeName?e.srcElement:e.srcElement.parentElement):(t="IMG"!==e.target.nodeName?e.target.firstChild:e.target,n="IMG"!==e.target.nodeName?e.target:e.target.parentElement),arr=Array.prototype.slice.call(this.collection),this.div.classList.add("full-screen-gallery--visible"),this.closeBtn.classList.add("full-screen-gallery__button"),this.closeBtn.setAttribute("aria-label","Press enter to close gallery, use buttons to scroll gallery"),arr.map(function(e,n){var i=n+1;e.src===t.src?content+='<img class="full-screen-gallery__image" id="image-active" src="./images/'+i+'.jpg" alt="">':content+='<img class="full-screen-gallery__image" src="./images/'+i+'.jpg" alt="">'}.bind(this)),this.closeBtn.addEventListener("click",function(e){this.div.classList.add("full-screen-gallery--hidden"),this.div.classList.remove("full-screen-gallery--visible"),n.focus()}.bind(this),!1),this.closeBtn.addEventListener("keydown",function(e){13!==e.keyCode&&this.div.focus()}.bind(this),!1),this.div.addEventListener("click",function(e){e.srcElement?e.srcElement.src||(this.div.classList.add("full-screen-gallery--hidden"),this.div.classList.remove("full-screen-gallery--visible"),n.focus()):e.target.src||(this.div.classList.add("full-screen-gallery--hidden"),this.div.classList.remove("full-screen-gallery--visible"),n.focus())}.bind(this),!1),this.div.innerHTML=content,this.div.appendChild(this.closeBtn),document.body.appendChild(this.div),this.div.focus();var i=document.getElementById("image-active").offsetTop;this.div.scrollTop=i,this.closeBtn.innerHTML='<span class="fa fa-times"></span>',this.windowWidth>1e3&&(!1===this.checkIfFiredAlready&&alert("TO VIEW GALLERY SCROLL UP OR DOWN\n\nOR USE ARROW KEYS"),this.checkIfFiredAlready=!0)};var o={map:{},service:{},infoWindow:{},distance:{},cords:{lat:51.524813,lng:-.125688},placesList:document.getElementById("map-list")};o.initialize=function(e){this.placesList.innerHTML="";var t={location:this.cords,type:[e.type],rankBy:"rank"===e.sort?google.maps.places.RankBy.PROMINENCE:google.maps.places.RankBy.DISTANCE,radius:"rank"===e.sort?"1000":null};this.map=new google.maps.Map(document.getElementById("map-display"),{center:this.cords,zoom:15,cords:this.cords,disableDefaultUI:!0,gestureHandling:"cooperative"});var n=new google.maps.Marker({map:this.map,position:this.cords});this.infoWindow=new google.maps.InfoWindow,this.service=new google.maps.places.PlacesService(this.map),this.distance=new google.maps.DistanceMatrixService,this.infoWindow.setContent("<span>Herbrand Street<br>Bloomsbury<br>London<br>WC1N</span>"),this.infoWindow.open(this.map,n),this.service.nearbySearch(t,this.callback)},o.callback=function(e,t){if(t==google.maps.places.PlacesServiceStatus.OK)for(var n=0;n<e.length;n++)o.createMarker(e[n])},o.createMarker=function(e){var t=new google.maps.Marker({map:this.map,position:e.geometry.location,icon:{url:"https://developers.google.com/maps/documentation/javascript/images/circle.png"}});google.maps.event.addListener(t,"click",function(){this.service.getDetails(e,function(e,n){n===google.maps.places.PlacesServiceStatus.OK?(this.infoWindow.setContent("<h2>"+e.name+"</h2>"+e.adr_address),this.infoWindow.open(this.map,t)):console.error(n)}.bind(this))}.bind(this)),o.calculateDistance(e,t)},o.calculateDistance=function(e,t){point=function(){return{lat:e.geometry.location.lat(),lng:e.geometry.location.lng()}},this.distance.getDistanceMatrix({origins:[this.cords],destinations:[point()],travelMode:"WALKING"},function(n,i){var s=n.rows[0].elements[0].duration.text;this.displayList(s,e,t)}.bind(this))},o.displayList=function(e,t,n){var i=document.createElement("div"),s=document.createElement("button"),a=document.createElement("div"),o="";i.classList.add("map-list__item"),s.classList.add("map-list__button"),a.classList.add("map-list__details-list"),a.classList.add("map-list__details-list--hidden"),s.innerHTML="SEE MORE DETAILS",void 0!==t.photos?o+='<img class="map-list__image" src="'+t.photos[0].getUrl({maxWidth:75,maxHeight:75})+'" alt="">':o+='<img class="map-list__image" src="'+t.icon+'" alt="">',o+='<h3 class="map-list__name">'+t.name+'</h3><span class="map-list__duration">Distance by walking: <b>'+e+"</b></span>",i.innerHTML=o,i.appendChild(a),i.appendChild(s),this.placesList.appendChild(i),i.addEventListener("mouseover",function(){n.setIcon("")},!1),i.addEventListener("mouseleave",function(){n.setIcon("https://developers.google.com/maps/documentation/javascript/images/circle.png")},!1),i.addEventListener("click",function(){this.service.getDetails(t,function(e,t){t===google.maps.places.PlacesServiceStatus.OK?(this.infoWindow.setContent('<span class="place-name"><b>'+e.name+"</b></span>"+e.adr_address+'<a class="place-link" href="'+e.url+'" target="_blank">Open in Maps</a>'),this.infoWindow.open(this.map,n)):console.error(t)}.bind(this))}.bind(this),!1),s.addEventListener("click",function(e){e.stopPropagation(),this.service.getDetails(t,function(e,t){if(t===google.maps.places.PlacesServiceStatus.OK){a.classList.toggle("map-list__details-list--hidden"),a.classList.toggle("map-list__details-list--visible");var n="";void 0!==e.url&&(n+='<a class="details-list__link" href="'+e.url+'" title="Link to place in google maps app" target="_blank"><span class="details-list__icon fa fa-google" aria-hidden="true"></span><span class="details-list__description">Open in Maps</span></a>'),void 0!==e.website&&(n+='<a class="details-list__link" href="'+e.website+'" title="Link to webiste of the place" target="_blank"><span class="details-list__icon fa fa-globe" aria-hidden="true"></span><span class="details-list__description">Website</span></a>'),void 0!==e.rating&&(n+='<div class="details-list__item"><span class="details-list__icon fa fa-star" aria-hidden="true"></span><span class="details-list__description">'+e.rating+"</span></div>"),a.innerHTML=n,a.firstChild.focus()}else console.error(t)})}.bind(this),!1)},NAVIGATION={checkbox:document.getElementById("menu-checkbox")},NAVIGATION.hideFocus=function(e){9!==e.keyCode||e.shiftKey||(this.checkbox.checked=!1)},NAVIGATION.hideClick=function(e){(e.target||e.srcElement).href&&(this.checkbox.checked=!1)},NAVIGATION.hideClickOut=function(e){var t=e.target||e.srcElement;this.checkbox.checked&&"menu__label"!==t.className&&"menu__checkbox"!==t.className&&"menu-list"!==t.className&&(this.checkbox.checked=!1)},new(e("smooth-scroll"))('a[href*="#"]',{easing:"easeInOutQuad"});var r={};r.init=function(){var e=new XMLHttpRequest;e.open("GET","http://api.openweathermap.org/data/2.5/weather?q=London&appid=a472ebd642da3e64e35da328aaf3531c&units=metric",!0),e.onreadystatechange=function(t){if(4!==e.readyState)return!1;200!==e.status&&console.err("Status error: "+e.status);var n={},i=document.getElementById("weather"),s=document.createElement("img"),a=document.createElement("div");s.classList.add("weather__icon"),n=t.srcElement?JSON.parse(t.srcElement.response):JSON.parse(t.target.response),a.innerHTML='<span class="weather__text">'+n.weather[0].main+'</span><span class="weather__text">'+n.main.temp.toFixed(1)+" °C</span>",s.src="http://openweathermap.org/img/w/"+n.weather[0].icon+".png",i.appendChild(s),i.appendChild(a)},e.send()},r.init()},{"smooth-scroll":1}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
